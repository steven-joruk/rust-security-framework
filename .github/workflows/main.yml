name: CI

on:
  pull_request:
  push:
    branches: master

jobs:
  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        rust: [ 1.42.0, stable, nightly ]

        combo: [ {
          deployment_target: "10.9",
          feature: OSX_10_12
        }, {
          deployment_target: "10.10",
          feature: OSX_10_10
        }, {
          deployment_target: "10.11",
          feature: OSX_10_11
        }, {
          deployment_target: "10.12",
          feature: OSX_10_12
        }]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo build for each deployment target's respective feature
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.combo.deployment_target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features ${{ matrix.combo.feature }} --manifest-path security-framework/Cargo.toml

      - name: Run cargo test for each deployment target's respective feature
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.combo.deployment_target }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features ${{ matrix.combo.feature }} --manifest-path security-framework/Cargo.toml

  lints:
    name: Lints
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.38.0
          override: true
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
